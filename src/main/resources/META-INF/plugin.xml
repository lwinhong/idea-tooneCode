<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.tooneCode.idea-tooneCode</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>TooneCode</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="toonesale@toone.com.cn" url="https://www.toone.com.cn/">Toone</vendor>


    <!-- Declare the default resource location for localizing menu strings -->
    <resource-bundle>messageBundle</resource-bundle>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description>
        <![CDATA[
            Toone 编码助手. 快速方便. 心有灵犀一点通。<br>
            <em>编码助手. 快速方便. 心有灵犀一点通。</em>
        ]]>
    </description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends optional="true" config-file="code-withJava.xml">com.intellij.modules.java</depends>
    <depends optional="true" config-file="code-withPython.xml">com.intellij.modules.python</depends>
    <depends optional="true" config-file="code-withGolang.xml">com.intellij.modules.goland</depends>
    <depends optional="true" config-file="code-withJavaScript.xml">com.intellij.modules.webstorm</depends>

    <projectListeners>
        <listener class="com.tooneCode.listeners.CodeLookupManagerListener"
                  topic="com.intellij.codeInsight.lookup.LookupManagerListener"/>
        <listener class="com.tooneCode.listeners.CodeEditorManagerListener"
                  topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>
        <listener topic="com.intellij.openapi.command.CommandListener"
                  class="com.tooneCode.listeners.CodeCommandListener"/>

    </projectListeners>
    <applicationListeners>
        <listener topic="com.intellij.openapi.project.ProjectManagerListener"
                  class="com.tooneCode.listeners.MultiLangCodeProjectManagerListener"/>
    </applicationListeners>
    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="com.tooneCode.toolWindow" anchor="right" secondary="false"
                    canCloseContents="true"
                    factoryClass="com.tooneCode.toolWindow.CodeToolWindow"/>
        <notificationGroup id="tooneCode.notice" displayType="BALLOON"/>
        <editorFactoryListener implementation="com.tooneCode.listeners.CodeEditorListener"/>
        <typedHandler order="first, before completionAutoPopup"
                      implementation="com.tooneCode.editor.InputTypeEndHandler"/>
        <!--   这是新版本的写法     <postStartupActivity implementation="com.tooneCode.listeners.ProjectActivityListener"/>-->

        <!-- 设置和状态栏暂时不要 -->
        <!--        <statusBarWidgetFactory id="com.tooneCode.intellij.status"-->
        <!--                                implementation="com.tooneCode.ui.statusbar.CodeStatusBarWidgetFactory"/>-->
        <!--        <applicationConfigurable instance="com.tooneCode.ui.config.CodeConfigurable" displayName="TooneCode"/>-->
        <actionPromoter order="last" implementation="com.tooneCode.completion.action.CodeActionPromoter"/>
        <notificationGroup id="codeBalloonNotifications" displayType="BALLOON" key="notifications.balloon.group.name"/>
        <notificationGroup id="codeStickyNotifications" displayType="STICKY_BALLOON"
                           key="notifications.sticky.group.name"/>
    </extensions>
    <actions>
        <action
                id="tooneCode.actions.EditorTextReplaceAction"
                class="com.tooneCode.actions.EditorTextReplaceAction"
                text="TooneCode"
                description="Replaces selected text with 'Replacement'."
        >
        </action>
        <action
                id="tooneCode.actions.CreateEditorAction"
                class="com.tooneCode.actions.CreateEditorAction"
                text="新增编辑器"
                description="新增编辑器."
        >
        </action>

        <group id="com.tooneCode.actions.TooneCodePopupMenuActionGroup"
               class="com.tooneCode.actions.TooneCodePopupMenuActionGroup"
               popup="true" text="TooneCode" description="TooneCode AI 编码助手"
        >
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
        </group>
        <action
                id="tooneCode.actions.code.CodeGenerateAddCommentsAction"
                class="com.tooneCode.actions.code.CodeGenerateAddCommentsAction"
                text="生成代码注释"
                description="生成代码注释."
        >
        </action>
        <action
                id="tooneCode.actions.code.CodeGenerateAddExplainAction"
                class="com.tooneCode.actions.code.CodeGenerateAddExplainAction"
                text="解释代码"
                description="解释代码."
        >
        </action>
        <action
                id="tooneCode.actions.code.CodeGenerateAddTestsAction"
                class="com.tooneCode.actions.code.CodeGenerateAddTestsAction"
                text="生成单元测试"
                description="生成测试."
        >
        </action>
        <action
                id="tooneCode.actions.code.CodeGenerateAddOptimizationAction"
                class="com.tooneCode.actions.code.CodeGenerateAddOptimizationAction"
                text="生成优化建议"
                description="生成优化建议."
        >
        </action>
        <action
                id="tooneCode.actions.code.CodeGenerateAskAction"
                class="com.tooneCode.actions.code.CodeGenerateAskAction"
                text="提问"
                description="提问."
        >
        </action>

        <!-- 按Tab键接受TooneCode的提示 -->
        <action id="ApplyCodeInlayCompletion"
                class="com.tooneCode.completion.action.CodeApplyInlayAction"
                text="Apply TooneCode Inline Completion">
            <keyboard-shortcut first-keystroke="TAB" keymap="$default" replace-all="true"/>
            <keyboard-shortcut first-keystroke="TAB" keymap="Mac OS X" replace-all="true"/>
            <keyboard-shortcut first-keystroke="TAB" keymap="Mac OS X 10.5+" replace-all="true"/>
            <keyboard-shortcut first-keystroke="alt TAB" keymap="$default"/>
        </action>
        <!-- 触发TooneCode的提示 -->
        <action id="CodeTriggerInlayCompletionAction"
                class="com.tooneCode.completion.action.CodeTriggerInlayCompletionAction"
                text="CodeTriggerInlayCompletionAction">
            <keyboard-shortcut first-keystroke="alt P" keymap="$default" replace-all="true"/>
            <keyboard-shortcut first-keystroke="alt P" keymap="Mac OS X" replace-all="true"/>
            <keyboard-shortcut first-keystroke="alt P" keymap="Mac OS X 10.5+" replace-all="true"/>
            <override-text place="MainMenu" text="Trigger TooneCode Inline Completion"/>
        </action>

        <!-- Esc退出当前inlay 提示 -->
        <action id="DisposeCodeInlayCompletionAction" class="com.tooneCode.completion.action.CodeEscapeInlaysAction"
        >
            <keyboard-shortcut first-keystroke="ESCAPE" keymap="$default"/>
            <override-text place="MainMenu" text="Hide Completions in Editor"/>
        </action>

        <action id="ApplyCodeInlayByLineCompletion"
                class="com.tooneCode.completion.action.CodeApplyInlayByLineAction"
                text="Apply TooneCode Inline Completion By Line">
            <keyboard-shortcut first-keystroke="control DOWN" keymap="$default"/>
            <keyboard-shortcut first-keystroke="meta DOWN" keymap="Mac OS X" replace-all="true"/>
            <keyboard-shortcut first-keystroke="meta DOWN" keymap="Mac OS X 10.5+" replace-all="true"/>
        </action>
        <action class="com.tooneCode.completion.action.CodePrevInlayCompletionAction"
                id="ShowCodePrevInlayCompletionAction" text="Show Tongyi Previous Inline Completion">
            <keyboard-shortcut first-keystroke="alt OPEN_BRACKET" keymap="$default"/>
            <keyboard-shortcut first-keystroke="alt OPEN_BRACKET" keymap="Mac OS X" replace-all="true"/>
            <keyboard-shortcut first-keystroke="alt OPEN_BRACKET" keymap="Mac OS X 10.5+" replace-all="true"/>
        </action>
        <action class="com.tooneCode.completion.action.CodeNextInlayCompletionAction"
                id="ShowCodeNextInlayCompletionAction" text="Show Tongyi Next Inline Completion">
            <keyboard-shortcut first-keystroke="alt CLOSE_BRACKET" keymap="$default"/>
            <keyboard-shortcut first-keystroke="alt CLOSE_BRACKET" keymap="Mac OS X" replace-all="true"/>
            <keyboard-shortcut first-keystroke="alt CLOSE_BRACKET" keymap="Mac OS X 10.5+" replace-all="true"/>
        </action>
        <action id="CodeCompletionTitleDisplayAction"
                class="com.tooneCode.ui.statusbar.CodeCompletionTitleDisplayAction"
                text="TooneCode Completion Settings"/>
        <action id="CodeDisplayStatusInfoAction"
                class="com.tooneCode.ui.statusbar.CodeStatusInfoDisplayAction" popup="true"/>
        <action id="CodeOpenSettingsAction"
                class="com.tooneCode.ui.action.OpenSettingsAction" popup="true"/>
        <action id="CodeCompletionEnabledToggleAction"
                class="com.tooneCode.completion.action.CodeCompletionEnabledToggleAction"/>
        <group id="codeStatusBarPopupNoLoginGroup">
            <reference id="CodeCompletionEnabledToggleAction"/>
            <reference id="CodeOpenSettingsAction"/>
        </group>


    </actions>
</idea-plugin>